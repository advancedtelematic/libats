stages:
  - test
  - publish
  - static scans
  - publish pages

variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: libats_slick
  MYSQL_PASSWORD: libats_slick
  MYSQL_DATABASE: libats_slick
  DB_URL: jdbc:mariadb://mariadb:3306/libats_slick
  KAFKA_HOST: kafka:9092
  KAFKA_ZOOKEEPER_CONNECT: kafka:2181
  VAULT_ADDR: "http://vault.sit-ota.aws.in.here.com"
  # The same image have to be used by test and code coverage jobs:
  TEST_IMAGE: advancedtelematic/gitlab-jobs:0.2.5
  TEST_IMAGE_SONAR: advancedtelematic/gitlab-jobs-sonar:0.0.3

services:
  - name: mariadb:10.2
    command: ["mysqld", "--character-set-server=utf8", "--collation-server=utf8_unicode_ci", "--max_connections=1000"]
  - name: spotify/kafka
    alias: kafka

test:
  image: $TEST_IMAGE
  # Keep image in sync with code coverage job below
  stage: test
  before_script:
    - mysql --protocol=TCP --host=mariadb --user=root --port 3306 -proot -e \ GRANT\ ALL\ PRIVILEGES\ ON\ \`libats_slick%\`.\*\ TO\ \'libats_slick\'@\'%\'\;
  script:
    - sbt -sbt-dir ./.sbt -ivy ./.ivy2 clean coverage test
  artifacts:
    paths:
      - "libats*/target/scala-*/scoverage-data"
      - "libats*/target/scala-*/src_managed"
      - "libats*/target/scala-*/classes"
  cache:
    paths:
      - .ivy2/
      - .sbt/

code coverage:
  extends: .report_scala_coverage
  needs: ["test"]
  image: $TEST_IMAGE_SONAR
  allow_failure: true
  script:
    - sbt -Dsonar.login=$SONARQUBE_TOKEN -sbt-dir ./.sbt -ivy ./.ivy2 coverageReport sonarScan
    # remove unneeded files just to copy all required directories in 'for' cycle
    - rm -rf libats-metrics-finagle libats_dependencies.png
    - for i in $(ls -d *libats* | grep -v /  | grep -v /) ; do mv $i/target/scala-*/scoverage-report/ $i-coverage ; done
  artifacts:
    expire_in: 3 weeks
    paths:
      - libats*-coverage
    reports:
      coverage_report:
        coverage_format: cobertura
        path: "libats*/target/scala-*/coverage-report/cobertura.xml"

publish:
  stage: publish
  tags:
    - docker-sock
  image: advancedtelematic/gitlab-jobs:0.2.5
  only:
    - master
  except:
    - schedules
  script:
    - git fetch origin
    - git describe
    - export VAULT_TOKEN=$(cat /opt/vault/token)
    - gitlab-docker-login $VAULT_ADDR
    - eval $(set-vault-env -v $VAULT_ADDR --secret gitlab/ats-aws-key --secret gitlab/maven-publish)
    - sbt -sbt-dir ./.sbt -ivy ./.ivy2 +publish
  cache:
    paths:
      - .ivy2/
      - .sbt/


include:
  - project: "poit/spc/be/prodsec-secret-detection"
    file: "ITT-Secret-Detection.gitlab-ci.yml"
  - template: License-Scanning.gitlab-ci.yml
  - project: olp/edge/ota/infra/security
    ref: v0.1.1
    file: /shared.yaml
